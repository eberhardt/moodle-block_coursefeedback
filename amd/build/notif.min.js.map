{"version":3,"file":"notif.min.js","sources":["../src/notif.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manager for the coursefeedback blocks rankingpage (ranking.php).\n *\n * @module      block_coursefeedback\n * @copyright   2022 onwards Felix Di Lenarda (@ innoCampus, TU Berlin)\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport * as Str from 'core/str';\n\n// Initiate the needed  global vars through an ajax call.\nlet courseId;\nlet feedbackId;\nlet questionId;\nlet questionSum;\nlet sendingActive = false;\n\n/**\n * fadeOut element\n * @param {Object} element\n * @returns {Promise}\n */\nfunction fadeOut(element) {\n    return new Promise((resolve) => {\n        let opacity = parseFloat(window.getComputedStyle(element).getPropertyValue(\"opacity\"));\n        // Fallback if opacity isn't computed properly.\n        if (isNaN(opacity)) {\n            opacity = 0;\n        }\n        let fadingOut = setInterval(function () {\n            if (opacity <= 0) {\n                clearInterval(fadingOut);\n                resolve();\n            } else {\n                opacity = opacity - 0.1;\n                element.style.opacity = opacity;\n            }\n        }, 50);\n    });\n}\n\n/**\n * fadeIn element\n *\n * @param {Object} element\n */\nfunction fadeIn(element) {\n    let opacity = parseFloat(window.getComputedStyle(element).getPropertyValue(\"opacity\"));\n    // Fallback if opacity isn't computed properly.\n    if (isNaN(opacity)) {\n        opacity = 0;\n    }\n    let fadingIn = setInterval(function () {\n        if (opacity >= 1) {\n            clearInterval(fadingIn);\n        } else {\n            opacity = opacity + 0.1;\n            element.style.opacity = opacity;\n        }\n    }, 50);\n}\n\n/**\n * send and receive feedback after answer was given\n *\n * @param {number} feedback (given answer)\n */\nconst sendAndReceiveFeedback = (feedback) => {\n    // Prevent doubleclicking for the same question.\n    if (sendingActive == true) {\n        return;\n    } else {\n        sendingActive = true;\n    }\n\n    // Get needed elements/nodes.\n    let notifikations = document.getElementById(\"user-notifications\");\n    let feedbackNotif = notifikations.getElementsByClassName(\"cfb-notification-container\")[0];\n    let questionInfo = notifikations.getElementsByClassName(\"cfb-question-info\")[0];\n    let question = notifikations.getElementsByClassName(\"cfb-question\")[0];\n    let notif = feedbackNotif.parentElement;\n\n    // Fading out notification after clicking an emoji.\n    let foPromise = fadeOut(notif);\n\n    // Submit given FB to the server and receive new question if any left.\n    let promises = Ajax.call([{\n        methodname: 'block_coursefeedback_answer_question_and_get_new',\n        args: {\n            courseid: courseId,\n            feedback: feedback,\n            feedbackid: feedbackId,\n            questionid: questionId,\n        }\n    }]);\n    promises[0].done(function (data) {\n        // Put new notification content and fade in after fadingout-promise resolved.\n        foPromise.then(() => {\n            if (data.nextquestion === null) {\n                // All questions were answered (no following question).\n                let thanksString = Str.get_string('notif_thankyou', 'block_coursefeedback');\n                thanksString.done(function (string) {\n                    feedbackNotif.innerHTML = string;\n                    fadeIn(notif);\n                });\n            } else {\n                // A following question was returned.\n                questionId = data.nextquestionid;\n                let qStr = Str.get_string('notif_question', 'block_coursefeedback');\n                qStr.done(function (string) {\n                    questionInfo.innerHTML = string.concat(questionId).concat('/').concat(questionSum).concat(': ');\n                    question.innerHTML = data.nextquestion;\n                    sendingActive = false;\n                    fadeIn(notif);\n                });\n            }\n        });\n    }).fail(function (ex) {\n        window.console.error(ex);\n    });\n};\n\n/**\n * Initialise by activatin the emoji click listeners\n *\n * @param {number} cid courseId\n * @param {number} fbid feedbackId\n * @param {number} quid questionId\n * @param {number} qusum how many question in total in this FB\n */\nexport const initialise = (cid, fbid, quid, qusum) => {\n    // Set global vars.\n    courseId = cid;\n    feedbackId = fbid;\n    questionId = quid;\n    questionSum = qusum;\n\n    let notifikations = document.getElementById(\"user-notifications\");\n    let feedbackNotif = notifikations.getElementsByClassName(\"cfb-notification-container\")[0];\n\n    // To prevent the destruction of our click events from bootsrap.\n    // We need to remove the 'role' attribute from this notification.\n    feedbackNotif.parentElement.removeAttribute(\"role\");\n\n    // Add click listener to our fbemoji-buttons.\n    const emojis = [...notifikations.getElementsByClassName(\"cfb-fbemoji\")];\n    emojis.map((emoji) => {\n        let answer = emojis.indexOf(emoji) + 1;\n        emoji.onclick = () => {\n            sendAndReceiveFeedback(answer, courseId, feedbackId, questionId, questionSum);\n        };\n    });\n\n    // Bootstrap 4 does not have opacity classes, inline styles are filtered out for some reason.\n    // Therefore we use invisible class and then switch to opacity to fade in.\n    let overlayIcon = notifikations.getElementsByClassName(\"cfb-overlay-icon\")[0];\n    let buttonContainer = notifikations.getElementsByClassName(\"cfb-button-containaer\")[0];\n    buttonContainer.style.opacity = 0;\n    buttonContainer.classList.remove('invisible');\n    // Fase out the loadingspinner and fade in the fbemoji-buttons.\n    let foPromise = fadeOut(overlayIcon);\n    foPromise.then(() => {\n        fadeIn(buttonContainer);\n    });\n};\n\n"],"names":["courseId","feedbackId","questionId","questionSum","sendingActive","fadeOut","element","Promise","resolve","opacity","parseFloat","window","getComputedStyle","getPropertyValue","isNaN","fadingOut","setInterval","clearInterval","style","fadeIn","fadingIn","cid","fbid","quid","qusum","notifikations","document","getElementById","getElementsByClassName","parentElement","removeAttribute","emojis","map","emoji","answer","indexOf","onclick","feedback","feedbackNotif","questionInfo","question","notif","foPromise","Ajax","call","methodname","args","courseid","feedbackid","questionid","done","data","then","nextquestion","Str","get_string","string","innerHTML","nextquestionid","concat","fail","ex","console","error","sendAndReceiveFeedback","overlayIcon","buttonContainer","classList","remove"],"mappings":"uXA2BIA,SACAC,WACAC,WACAC,u9DACAC,eAAgB,WAOXC,QAAQC,gBACN,IAAIC,SAAQ,SAACC,aACZC,QAAUC,WAAWC,OAAOC,iBAAiBN,SAASO,iBAAiB,YAEvEC,MAAML,WACNA,QAAU,OAEVM,UAAYC,aAAY,WACpBP,SAAW,GACXQ,cAAcF,WACdP,YAEAC,SAAoB,GACpBH,QAAQY,MAAMT,QAAUA,WAE7B,gBASFU,OAAOb,aACRG,QAAUC,WAAWC,OAAOC,iBAAiBN,SAASO,iBAAiB,YAEvEC,MAAML,WACNA,QAAU,OAEVW,SAAWJ,aAAY,WACnBP,SAAW,EACXQ,cAAcG,WAEdX,SAAoB,GACpBH,QAAQY,MAAMT,QAAUA,WAE7B,wBAuEmB,SAACY,IAAKC,KAAMC,KAAMC,OAExCxB,SAAWqB,IACXpB,WAAaqB,KACbpB,WAAaqB,KACbpB,YAAcqB,UAEVC,cAAgBC,SAASC,eAAe,sBACxBF,cAAcG,uBAAuB,8BAA8B,GAIzEC,cAAcC,gBAAgB,YAGtCC,0BAAaN,cAAcG,uBAAuB,gBACxDG,OAAOC,KAAI,SAACC,WACJC,OAASH,OAAOI,QAAQF,OAAS,EACrCA,MAAMG,QAAU,YAjFO,SAACC,aAEP,GAAjBjC,eAGAA,eAAgB,MAIhBqB,cAAgBC,SAASC,eAAe,sBACxCW,cAAgBb,cAAcG,uBAAuB,8BAA8B,GACnFW,aAAed,cAAcG,uBAAuB,qBAAqB,GACzEY,SAAWf,cAAcG,uBAAuB,gBAAgB,GAChEa,MAAQH,cAAcT,cAGtBa,UAAYrC,QAAQoC,OAGTE,cAAKC,KAAK,CAAC,CACtBC,WAAY,mDACZC,KAAM,CACFC,SAAU/C,SACVqC,SAAUA,SACVW,WAAY/C,WACZgD,WAAY/C,eAGX,GAAGgD,MAAK,SAAUC,MAEvBT,UAAUU,MAAK,WACe,OAAtBD,KAAKE,aAEcC,IAAIC,WAAW,iBAAkB,wBACvCL,MAAK,SAAUM,QACxBlB,cAAcmB,UAAYD,OAC1BrC,OAAOsB,WAIXvC,WAAaiD,KAAKO,eACPJ,IAAIC,WAAW,iBAAkB,wBACvCL,MAAK,SAAUM,QAChBjB,aAAakB,UAAYD,OAAOG,OAAOzD,YAAYyD,OAAO,KAAKA,OAAOxD,aAAawD,OAAO,MAC1FnB,SAASiB,UAAYN,KAAKE,aAC1BjD,eAAgB,EAChBe,OAAOsB,iBAIpBmB,MAAK,SAAUC,IACdlD,OAAOmD,QAAQC,MAAMF,QA+BjBG,CAAuB9B,gBAM3B+B,YAAcxC,cAAcG,uBAAuB,oBAAoB,GACvEsC,gBAAkBzC,cAAcG,uBAAuB,yBAAyB,GACpFsC,gBAAgBhD,MAAMT,QAAU,EAChCyD,gBAAgBC,UAAUC,OAAO,aAEjB/D,QAAQ4D,aACdb,MAAK,WACXjC,OAAO+C"}